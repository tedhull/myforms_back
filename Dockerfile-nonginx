FROM php:8.2-cli

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    unzip \
    libzip-dev \
    libicu-dev \
    libonig-dev \
    libpq-dev \
    libxml2-dev \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install \
    pdo_mysql \
    zip \
    intl \
    opcache \
    ctype \
    iconv \
    mbstring \
    xml

# Install Composer (specific version for stability)
COPY --from=composer:2.6 /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/project

# Set recommended PHP.ini settings
RUN echo "memory_limit=256M" > "$PHP_INI_DIR/conf.d/memory-limit.ini" \
    && echo "max_execution_time=600" >> "$PHP_INI_DIR/conf.d/memory-limit.ini" \
    && echo "upload_max_filesize=200M" >> "$PHP_INI_DIR/conf.d/memory-limit.ini" \
    && echo "post_max_size=200M" >> "$PHP_INI_DIR/conf.d/memory-limit.ini"

# Copy composer files first for better layer caching
COPY composer.json composer.lock /var/www/project/

# Set proper permissions for www-data user
RUN chown -R www-data:www-data /var/www/project

# Install dependencies with optimized settings as www-data user
# Note: We're not using 'composer update' to avoid potential issues with dependency resolution
# and to ensure we use the exact dependencies specified in composer.lock
USER www-data
RUN COMPOSER_MEMORY_LIMIT=-1 composer clear-cache && \
    COMPOSER_MEMORY_LIMIT=-1 composer install --prefer-dist --no-scripts --no-autoloader --no-interaction --no-progress

# Switch back to root for copying files
USER root

# Copy app source code
COPY . /var/www/project

# Set proper permissions again after copying all files
RUN chown -R www-data:www-data /var/www/project

# Generate optimized autoloader and run scripts as www-data
USER www-data
RUN COMPOSER_MEMORY_LIMIT=-1 composer dump-autoload --optimize --no-interaction && COMPOSER_MEMORY_LIMIT=-1 composer run-script post-install-cmd --no-interaction

# Expose port 80
EXPOSE 80

# Stay as www-data user for running the application
# This is more secure than running as root
# Start PHP built-in server
CMD ["php", "-S", "0.0.0.0:80", "-t", "public"]
